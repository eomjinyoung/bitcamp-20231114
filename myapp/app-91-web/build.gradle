plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.18'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'bitcamp'
version = '0.0.1-SNAPSHOT'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.3.2'

    // 개발 보조 라이브러리
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    // Lombok 관련 라이브러리
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // MySQL JDBC 라이브러리
    runtimeOnly 'com.mysql:mysql-connector-j'

    // 애노테이션으로 지정된 SpringBoot의 설정 처리를 도와주는 라이브러리
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

    // AWS S3 API 라이브러리
    implementation 'com.amazonaws:aws-java-sdk-s3:1.12.688'

    // log4j 2.x 라이브러리
    //implementation 'org.apache.logging.log4j:log4j-core:2.23.1'

    // Spring Security
    implementation "org.springframework.boot:spring-boot-starter-security"
    implementation "org.thymeleaf.extras:thymeleaf-extras-springsecurity5"

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter-test:3.0.3'
}

tasks.named('bootBuildImage') {
    builder = 'paketobuildpacks/builder-jammy-base:latest'
}

tasks.named('test') {
    useJUnitPlatform()
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

// 자바 소스를 컴파일 할 때 적용할 옵션(Gradle 로 컴파일 할 때)
tasks.withType(JavaCompile).configureEach {
    // 프로젝트의 소스 파일 인코딩을 gradle에게 알려준다.
    // $javac -encoding UTF-8 ..
    options.encoding = 'UTF-8'
}
